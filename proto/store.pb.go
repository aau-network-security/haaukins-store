// Code generated by protoc-gen-go. DO NOT EDIT.
// source: store.proto

package store

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type GetTimeSeriesResponse struct {
	Timeseries           map[string]int32 `protobuf:"bytes,1,rep,name=timeseries,proto3" json:"timeseries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetTimeSeriesResponse) Reset()         { *m = GetTimeSeriesResponse{} }
func (m *GetTimeSeriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTimeSeriesResponse) ProtoMessage()    {}
func (*GetTimeSeriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{1}
}

func (m *GetTimeSeriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTimeSeriesResponse.Unmarshal(m, b)
}
func (m *GetTimeSeriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTimeSeriesResponse.Marshal(b, m, deterministic)
}
func (m *GetTimeSeriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeSeriesResponse.Merge(m, src)
}
func (m *GetTimeSeriesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTimeSeriesResponse.Size(m)
}
func (m *GetTimeSeriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeSeriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeSeriesResponse proto.InternalMessageInfo

func (m *GetTimeSeriesResponse) GetTimeseries() map[string]int32 {
	if m != nil {
		return m.Timeseries
	}
	return nil
}

type GetEventStatusRequest struct {
	EventTag             string   `protobuf:"bytes,1,opt,name=eventTag,proto3" json:"eventTag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventStatusRequest) Reset()         { *m = GetEventStatusRequest{} }
func (m *GetEventStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventStatusRequest) ProtoMessage()    {}
func (*GetEventStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{2}
}

func (m *GetEventStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventStatusRequest.Unmarshal(m, b)
}
func (m *GetEventStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetEventStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventStatusRequest.Merge(m, src)
}
func (m *GetEventStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventStatusRequest.Size(m)
}
func (m *GetEventStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventStatusRequest proto.InternalMessageInfo

func (m *GetEventStatusRequest) GetEventTag() string {
	if m != nil {
		return m.EventTag
	}
	return ""
}

type GetEventByTagReq struct {
	EventTag             string   `protobuf:"bytes,1,opt,name=eventTag,proto3" json:"eventTag,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventByTagReq) Reset()         { *m = GetEventByTagReq{} }
func (m *GetEventByTagReq) String() string { return proto.CompactTextString(m) }
func (*GetEventByTagReq) ProtoMessage()    {}
func (*GetEventByTagReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{3}
}

func (m *GetEventByTagReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventByTagReq.Unmarshal(m, b)
}
func (m *GetEventByTagReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventByTagReq.Marshal(b, m, deterministic)
}
func (m *GetEventByTagReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventByTagReq.Merge(m, src)
}
func (m *GetEventByTagReq) XXX_Size() int {
	return xxx_messageInfo_GetEventByTagReq.Size(m)
}
func (m *GetEventByTagReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventByTagReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventByTagReq proto.InternalMessageInfo

func (m *GetEventByTagReq) GetEventTag() string {
	if m != nil {
		return m.EventTag
	}
	return ""
}

func (m *GetEventByTagReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type GetEventByTagResp struct {
	IsExist              bool     `protobuf:"varint,1,opt,name=isExist,proto3" json:"isExist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventByTagResp) Reset()         { *m = GetEventByTagResp{} }
func (m *GetEventByTagResp) String() string { return proto.CompactTextString(m) }
func (*GetEventByTagResp) ProtoMessage()    {}
func (*GetEventByTagResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{4}
}

func (m *GetEventByTagResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventByTagResp.Unmarshal(m, b)
}
func (m *GetEventByTagResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventByTagResp.Marshal(b, m, deterministic)
}
func (m *GetEventByTagResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventByTagResp.Merge(m, src)
}
func (m *GetEventByTagResp) XXX_Size() int {
	return xxx_messageInfo_GetEventByTagResp.Size(m)
}
func (m *GetEventByTagResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventByTagResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventByTagResp proto.InternalMessageInfo

func (m *GetEventByTagResp) GetIsExist() bool {
	if m != nil {
		return m.IsExist
	}
	return false
}

type DropEventReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropEventReq) Reset()         { *m = DropEventReq{} }
func (m *DropEventReq) String() string { return proto.CompactTextString(m) }
func (*DropEventReq) ProtoMessage()    {}
func (*DropEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{5}
}

func (m *DropEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropEventReq.Unmarshal(m, b)
}
func (m *DropEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropEventReq.Marshal(b, m, deterministic)
}
func (m *DropEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropEventReq.Merge(m, src)
}
func (m *DropEventReq) XXX_Size() int {
	return xxx_messageInfo_DropEventReq.Size(m)
}
func (m *DropEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DropEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_DropEventReq proto.InternalMessageInfo

func (m *DropEventReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *DropEventReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type DropEventResp struct {
	IsDropped            bool     `protobuf:"varint,1,opt,name=isDropped,proto3" json:"isDropped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropEventResp) Reset()         { *m = DropEventResp{} }
func (m *DropEventResp) String() string { return proto.CompactTextString(m) }
func (*DropEventResp) ProtoMessage()    {}
func (*DropEventResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{6}
}

func (m *DropEventResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropEventResp.Unmarshal(m, b)
}
func (m *DropEventResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropEventResp.Marshal(b, m, deterministic)
}
func (m *DropEventResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropEventResp.Merge(m, src)
}
func (m *DropEventResp) XXX_Size() int {
	return xxx_messageInfo_DropEventResp.Size(m)
}
func (m *DropEventResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DropEventResp.DiscardUnknown(m)
}

var xxx_messageInfo_DropEventResp proto.InternalMessageInfo

func (m *DropEventResp) GetIsDropped() bool {
	if m != nil {
		return m.IsDropped
	}
	return false
}

type GetEventRequest struct {
	// this will indicate that whether all events requested or some by status
	// status 0  > Running Events (which set as Running)
	// status 1  > Suspended Events (which set as Suspended)
	// status 2  > Booked Events (which are booked by client)
	// status 3  > Closed Events (which are finished and closed )
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventRequest) Reset()         { *m = GetEventRequest{} }
func (m *GetEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventRequest) ProtoMessage()    {}
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{7}
}

func (m *GetEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRequest.Unmarshal(m, b)
}
func (m *GetEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRequest.Marshal(b, m, deterministic)
}
func (m *GetEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRequest.Merge(m, src)
}
func (m *GetEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventRequest.Size(m)
}
func (m *GetEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRequest proto.InternalMessageInfo

func (m *GetEventRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type GetEventByUserReq struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventByUserReq) Reset()         { *m = GetEventByUserReq{} }
func (m *GetEventByUserReq) String() string { return proto.CompactTextString(m) }
func (*GetEventByUserReq) ProtoMessage()    {}
func (*GetEventByUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{8}
}

func (m *GetEventByUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventByUserReq.Unmarshal(m, b)
}
func (m *GetEventByUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventByUserReq.Marshal(b, m, deterministic)
}
func (m *GetEventByUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventByUserReq.Merge(m, src)
}
func (m *GetEventByUserReq) XXX_Size() int {
	return xxx_messageInfo_GetEventByUserReq.Size(m)
}
func (m *GetEventByUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventByUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventByUserReq proto.InternalMessageInfo

func (m *GetEventByUserReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetEventByUserReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type SetEventStatusRequest struct {
	EventTag             string   `protobuf:"bytes,1,opt,name=eventTag,proto3" json:"eventTag,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetEventStatusRequest) Reset()         { *m = SetEventStatusRequest{} }
func (m *SetEventStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SetEventStatusRequest) ProtoMessage()    {}
func (*SetEventStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{9}
}

func (m *SetEventStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetEventStatusRequest.Unmarshal(m, b)
}
func (m *SetEventStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetEventStatusRequest.Marshal(b, m, deterministic)
}
func (m *SetEventStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetEventStatusRequest.Merge(m, src)
}
func (m *SetEventStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SetEventStatusRequest.Size(m)
}
func (m *SetEventStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetEventStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetEventStatusRequest proto.InternalMessageInfo

func (m *SetEventStatusRequest) GetEventTag() string {
	if m != nil {
		return m.EventTag
	}
	return ""
}

func (m *SetEventStatusRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type EventStatusStore struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventStatusStore) Reset()         { *m = EventStatusStore{} }
func (m *EventStatusStore) String() string { return proto.CompactTextString(m) }
func (*EventStatusStore) ProtoMessage()    {}
func (*EventStatusStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{10}
}

func (m *EventStatusStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventStatusStore.Unmarshal(m, b)
}
func (m *EventStatusStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventStatusStore.Marshal(b, m, deterministic)
}
func (m *EventStatusStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventStatusStore.Merge(m, src)
}
func (m *EventStatusStore) XXX_Size() int {
	return xxx_messageInfo_EventStatusStore.Size(m)
}
func (m *EventStatusStore) XXX_DiscardUnknown() {
	xxx_messageInfo_EventStatusStore.DiscardUnknown(m)
}

var xxx_messageInfo_EventStatusStore proto.InternalMessageInfo

func (m *EventStatusStore) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type AddEventRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Frontends            string   `protobuf:"bytes,3,opt,name=frontends,proto3" json:"frontends,omitempty"`
	Exercises            string   `protobuf:"bytes,4,opt,name=exercises,proto3" json:"exercises,omitempty"`
	Available            int32    `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	Capacity             int32    `protobuf:"varint,6,opt,name=capacity,proto3" json:"capacity,omitempty"`
	StartTime            string   `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	ExpectedFinishTime   string   `protobuf:"bytes,8,opt,name=expectedFinishTime,proto3" json:"expectedFinishTime,omitempty"`
	FinishedAt           string   `protobuf:"bytes,9,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy            string   `protobuf:"bytes,11,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	OnlyVPN              bool     `protobuf:"varint,12,opt,name=onlyVPN,proto3" json:"onlyVPN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventRequest) Reset()         { *m = AddEventRequest{} }
func (m *AddEventRequest) String() string { return proto.CompactTextString(m) }
func (*AddEventRequest) ProtoMessage()    {}
func (*AddEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{11}
}

func (m *AddEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventRequest.Unmarshal(m, b)
}
func (m *AddEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventRequest.Marshal(b, m, deterministic)
}
func (m *AddEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventRequest.Merge(m, src)
}
func (m *AddEventRequest) XXX_Size() int {
	return xxx_messageInfo_AddEventRequest.Size(m)
}
func (m *AddEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventRequest proto.InternalMessageInfo

func (m *AddEventRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddEventRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *AddEventRequest) GetFrontends() string {
	if m != nil {
		return m.Frontends
	}
	return ""
}

func (m *AddEventRequest) GetExercises() string {
	if m != nil {
		return m.Exercises
	}
	return ""
}

func (m *AddEventRequest) GetAvailable() int32 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *AddEventRequest) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *AddEventRequest) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *AddEventRequest) GetExpectedFinishTime() string {
	if m != nil {
		return m.ExpectedFinishTime
	}
	return ""
}

func (m *AddEventRequest) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *AddEventRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddEventRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AddEventRequest) GetOnlyVPN() bool {
	if m != nil {
		return m.OnlyVPN
	}
	return false
}

type AddTeamRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventTag             string   `protobuf:"bytes,2,opt,name=event_tag,json=eventTag,proto3" json:"event_tag,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTeamRequest) Reset()         { *m = AddTeamRequest{} }
func (m *AddTeamRequest) String() string { return proto.CompactTextString(m) }
func (*AddTeamRequest) ProtoMessage()    {}
func (*AddTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{12}
}

func (m *AddTeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTeamRequest.Unmarshal(m, b)
}
func (m *AddTeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTeamRequest.Marshal(b, m, deterministic)
}
func (m *AddTeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTeamRequest.Merge(m, src)
}
func (m *AddTeamRequest) XXX_Size() int {
	return xxx_messageInfo_AddTeamRequest.Size(m)
}
func (m *AddTeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTeamRequest proto.InternalMessageInfo

func (m *AddTeamRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddTeamRequest) GetEventTag() string {
	if m != nil {
		return m.EventTag
	}
	return ""
}

func (m *AddTeamRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddTeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddTeamRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type InsertResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertResponse) Reset()         { *m = InsertResponse{} }
func (m *InsertResponse) String() string { return proto.CompactTextString(m) }
func (*InsertResponse) ProtoMessage()    {}
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{13}
}

func (m *InsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertResponse.Unmarshal(m, b)
}
func (m *InsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertResponse.Marshal(b, m, deterministic)
}
func (m *InsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertResponse.Merge(m, src)
}
func (m *InsertResponse) XXX_Size() int {
	return xxx_messageInfo_InsertResponse.Size(m)
}
func (m *InsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertResponse proto.InternalMessageInfo

func (m *InsertResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InsertResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type GetEventResponse struct {
	Events               []*GetEventResponse_Events `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	ErrorMessage         string                     `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetEventResponse) Reset()         { *m = GetEventResponse{} }
func (m *GetEventResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventResponse) ProtoMessage()    {}
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{14}
}

func (m *GetEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventResponse.Unmarshal(m, b)
}
func (m *GetEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventResponse.Marshal(b, m, deterministic)
}
func (m *GetEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventResponse.Merge(m, src)
}
func (m *GetEventResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventResponse.Size(m)
}
func (m *GetEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventResponse proto.InternalMessageInfo

func (m *GetEventResponse) GetEvents() []*GetEventResponse_Events {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *GetEventResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type GetEventResponse_Events struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Frontends            string   `protobuf:"bytes,3,opt,name=frontends,proto3" json:"frontends,omitempty"`
	Exercises            string   `protobuf:"bytes,4,opt,name=exercises,proto3" json:"exercises,omitempty"`
	Available            int32    `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	Capacity             int32    `protobuf:"varint,6,opt,name=capacity,proto3" json:"capacity,omitempty"`
	StartedAt            string   `protobuf:"bytes,7,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	ExpectedFinishTime   string   `protobuf:"bytes,8,opt,name=expectedFinishTime,proto3" json:"expectedFinishTime,omitempty"`
	FinishedAt           string   `protobuf:"bytes,9,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	Status               int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreatedBy            string   `protobuf:"bytes,11,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	OnlyVPN              bool     `protobuf:"varint,12,opt,name=onlyVPN,proto3" json:"onlyVPN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventResponse_Events) Reset()         { *m = GetEventResponse_Events{} }
func (m *GetEventResponse_Events) String() string { return proto.CompactTextString(m) }
func (*GetEventResponse_Events) ProtoMessage()    {}
func (*GetEventResponse_Events) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{14, 0}
}

func (m *GetEventResponse_Events) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventResponse_Events.Unmarshal(m, b)
}
func (m *GetEventResponse_Events) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventResponse_Events.Marshal(b, m, deterministic)
}
func (m *GetEventResponse_Events) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventResponse_Events.Merge(m, src)
}
func (m *GetEventResponse_Events) XXX_Size() int {
	return xxx_messageInfo_GetEventResponse_Events.Size(m)
}
func (m *GetEventResponse_Events) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventResponse_Events.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventResponse_Events proto.InternalMessageInfo

func (m *GetEventResponse_Events) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetEventResponse_Events) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *GetEventResponse_Events) GetFrontends() string {
	if m != nil {
		return m.Frontends
	}
	return ""
}

func (m *GetEventResponse_Events) GetExercises() string {
	if m != nil {
		return m.Exercises
	}
	return ""
}

func (m *GetEventResponse_Events) GetAvailable() int32 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *GetEventResponse_Events) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *GetEventResponse_Events) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *GetEventResponse_Events) GetExpectedFinishTime() string {
	if m != nil {
		return m.ExpectedFinishTime
	}
	return ""
}

func (m *GetEventResponse_Events) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *GetEventResponse_Events) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetEventResponse_Events) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *GetEventResponse_Events) GetOnlyVPN() bool {
	if m != nil {
		return m.OnlyVPN
	}
	return false
}

type GetEventTeamsRequest struct {
	EventTag             string   `protobuf:"bytes,1,opt,name=eventTag,proto3" json:"eventTag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventTeamsRequest) Reset()         { *m = GetEventTeamsRequest{} }
func (m *GetEventTeamsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventTeamsRequest) ProtoMessage()    {}
func (*GetEventTeamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{15}
}

func (m *GetEventTeamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventTeamsRequest.Unmarshal(m, b)
}
func (m *GetEventTeamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventTeamsRequest.Marshal(b, m, deterministic)
}
func (m *GetEventTeamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventTeamsRequest.Merge(m, src)
}
func (m *GetEventTeamsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventTeamsRequest.Size(m)
}
func (m *GetEventTeamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventTeamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventTeamsRequest proto.InternalMessageInfo

func (m *GetEventTeamsRequest) GetEventTag() string {
	if m != nil {
		return m.EventTag
	}
	return ""
}

type GetEventTeamsResponse struct {
	Teams                []*GetEventTeamsResponse_Teams `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	ErrorMessage         string                         `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GetEventTeamsResponse) Reset()         { *m = GetEventTeamsResponse{} }
func (m *GetEventTeamsResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventTeamsResponse) ProtoMessage()    {}
func (*GetEventTeamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{16}
}

func (m *GetEventTeamsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventTeamsResponse.Unmarshal(m, b)
}
func (m *GetEventTeamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventTeamsResponse.Marshal(b, m, deterministic)
}
func (m *GetEventTeamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventTeamsResponse.Merge(m, src)
}
func (m *GetEventTeamsResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventTeamsResponse.Size(m)
}
func (m *GetEventTeamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventTeamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventTeamsResponse proto.InternalMessageInfo

func (m *GetEventTeamsResponse) GetTeams() []*GetEventTeamsResponse_Teams {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *GetEventTeamsResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type GetEventTeamsResponse_Teams struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	HashPassword         string   `protobuf:"bytes,4,opt,name=hashPassword,proto3" json:"hashPassword,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	LastAccess           string   `protobuf:"bytes,6,opt,name=lastAccess,proto3" json:"lastAccess,omitempty"`
	SolvedChallenges     string   `protobuf:"bytes,7,opt,name=solvedChallenges,proto3" json:"solvedChallenges,omitempty"`
	Step                 int32    `protobuf:"varint,8,opt,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventTeamsResponse_Teams) Reset()         { *m = GetEventTeamsResponse_Teams{} }
func (m *GetEventTeamsResponse_Teams) String() string { return proto.CompactTextString(m) }
func (*GetEventTeamsResponse_Teams) ProtoMessage()    {}
func (*GetEventTeamsResponse_Teams) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{16, 0}
}

func (m *GetEventTeamsResponse_Teams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventTeamsResponse_Teams.Unmarshal(m, b)
}
func (m *GetEventTeamsResponse_Teams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventTeamsResponse_Teams.Marshal(b, m, deterministic)
}
func (m *GetEventTeamsResponse_Teams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventTeamsResponse_Teams.Merge(m, src)
}
func (m *GetEventTeamsResponse_Teams) XXX_Size() int {
	return xxx_messageInfo_GetEventTeamsResponse_Teams.Size(m)
}
func (m *GetEventTeamsResponse_Teams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventTeamsResponse_Teams.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventTeamsResponse_Teams proto.InternalMessageInfo

func (m *GetEventTeamsResponse_Teams) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetHashPassword() string {
	if m != nil {
		return m.HashPassword
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetLastAccess() string {
	if m != nil {
		return m.LastAccess
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetSolvedChallenges() string {
	if m != nil {
		return m.SolvedChallenges
	}
	return ""
}

func (m *GetEventTeamsResponse_Teams) GetStep() int32 {
	if m != nil {
		return m.Step
	}
	return 0
}

type UpdateEventRequest struct {
	OldTag               string   `protobuf:"bytes,1,opt,name=oldTag,proto3" json:"oldTag,omitempty"`
	NewTag               string   `protobuf:"bytes,2,opt,name=newTag,proto3" json:"newTag,omitempty"`
	FinishedAt           string   `protobuf:"bytes,3,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventRequest) Reset()         { *m = UpdateEventRequest{} }
func (m *UpdateEventRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEventRequest) ProtoMessage()    {}
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{17}
}

func (m *UpdateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventRequest.Unmarshal(m, b)
}
func (m *UpdateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventRequest.Merge(m, src)
}
func (m *UpdateEventRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEventRequest.Size(m)
}
func (m *UpdateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventRequest proto.InternalMessageInfo

func (m *UpdateEventRequest) GetOldTag() string {
	if m != nil {
		return m.OldTag
	}
	return ""
}

func (m *UpdateEventRequest) GetNewTag() string {
	if m != nil {
		return m.NewTag
	}
	return ""
}

func (m *UpdateEventRequest) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

type UpdateTeamSolvedChallengeRequest struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=teamId,proto3" json:"teamId,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	CompletedAt          string   `protobuf:"bytes,3,opt,name=completedAt,proto3" json:"completedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTeamSolvedChallengeRequest) Reset()         { *m = UpdateTeamSolvedChallengeRequest{} }
func (m *UpdateTeamSolvedChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTeamSolvedChallengeRequest) ProtoMessage()    {}
func (*UpdateTeamSolvedChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{18}
}

func (m *UpdateTeamSolvedChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTeamSolvedChallengeRequest.Unmarshal(m, b)
}
func (m *UpdateTeamSolvedChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTeamSolvedChallengeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTeamSolvedChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTeamSolvedChallengeRequest.Merge(m, src)
}
func (m *UpdateTeamSolvedChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTeamSolvedChallengeRequest.Size(m)
}
func (m *UpdateTeamSolvedChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTeamSolvedChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTeamSolvedChallengeRequest proto.InternalMessageInfo

func (m *UpdateTeamSolvedChallengeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *UpdateTeamSolvedChallengeRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *UpdateTeamSolvedChallengeRequest) GetCompletedAt() string {
	if m != nil {
		return m.CompletedAt
	}
	return ""
}

type UpdateTeamLastAccessRequest struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=teamId,proto3" json:"teamId,omitempty"`
	AccessAt             string   `protobuf:"bytes,2,opt,name=accessAt,proto3" json:"accessAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTeamLastAccessRequest) Reset()         { *m = UpdateTeamLastAccessRequest{} }
func (m *UpdateTeamLastAccessRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTeamLastAccessRequest) ProtoMessage()    {}
func (*UpdateTeamLastAccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{19}
}

func (m *UpdateTeamLastAccessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTeamLastAccessRequest.Unmarshal(m, b)
}
func (m *UpdateTeamLastAccessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTeamLastAccessRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTeamLastAccessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTeamLastAccessRequest.Merge(m, src)
}
func (m *UpdateTeamLastAccessRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTeamLastAccessRequest.Size(m)
}
func (m *UpdateTeamLastAccessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTeamLastAccessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTeamLastAccessRequest proto.InternalMessageInfo

func (m *UpdateTeamLastAccessRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *UpdateTeamLastAccessRequest) GetAccessAt() string {
	if m != nil {
		return m.AccessAt
	}
	return ""
}

type UpdateResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98bbca36ef968dfc, []int{20}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "EmptyRequest")
	proto.RegisterType((*GetTimeSeriesResponse)(nil), "GetTimeSeriesResponse")
	proto.RegisterMapType((map[string]int32)(nil), "GetTimeSeriesResponse.TimeseriesEntry")
	proto.RegisterType((*GetEventStatusRequest)(nil), "GetEventStatusRequest")
	proto.RegisterType((*GetEventByTagReq)(nil), "GetEventByTagReq")
	proto.RegisterType((*GetEventByTagResp)(nil), "GetEventByTagResp")
	proto.RegisterType((*DropEventReq)(nil), "DropEventReq")
	proto.RegisterType((*DropEventResp)(nil), "DropEventResp")
	proto.RegisterType((*GetEventRequest)(nil), "GetEventRequest")
	proto.RegisterType((*GetEventByUserReq)(nil), "GetEventByUserReq")
	proto.RegisterType((*SetEventStatusRequest)(nil), "SetEventStatusRequest")
	proto.RegisterType((*EventStatusStore)(nil), "EventStatusStore")
	proto.RegisterType((*AddEventRequest)(nil), "AddEventRequest")
	proto.RegisterType((*AddTeamRequest)(nil), "AddTeamRequest")
	proto.RegisterType((*InsertResponse)(nil), "InsertResponse")
	proto.RegisterType((*GetEventResponse)(nil), "GetEventResponse")
	proto.RegisterType((*GetEventResponse_Events)(nil), "GetEventResponse.Events")
	proto.RegisterType((*GetEventTeamsRequest)(nil), "GetEventTeamsRequest")
	proto.RegisterType((*GetEventTeamsResponse)(nil), "GetEventTeamsResponse")
	proto.RegisterType((*GetEventTeamsResponse_Teams)(nil), "GetEventTeamsResponse.Teams")
	proto.RegisterType((*UpdateEventRequest)(nil), "UpdateEventRequest")
	proto.RegisterType((*UpdateTeamSolvedChallengeRequest)(nil), "UpdateTeamSolvedChallengeRequest")
	proto.RegisterType((*UpdateTeamLastAccessRequest)(nil), "UpdateTeamLastAccessRequest")
	proto.RegisterType((*UpdateResponse)(nil), "UpdateResponse")
}

func init() { proto.RegisterFile("store.proto", fileDescriptor_98bbca36ef968dfc) }

var fileDescriptor_98bbca36ef968dfc = []byte{
	// 1061 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xcd, 0x6e, 0x1c, 0x45,
	0x10, 0xde, 0x1f, 0xef, 0x7a, 0xa7, 0x6c, 0xef, 0xae, 0x1b, 0x27, 0x1a, 0x26, 0x16, 0x32, 0x7d,
	0x40, 0x26, 0x22, 0x0d, 0xda, 0x5c, 0x4c, 0xa4, 0x08, 0x36, 0xc1, 0x8e, 0x2c, 0x20, 0x4a, 0x66,
	0x37, 0x5c, 0x51, 0x67, 0xa7, 0x62, 0x8f, 0x98, 0x9d, 0x99, 0x4c, 0xb7, 0x1d, 0xef, 0x99, 0x17,
	0xe0, 0x09, 0x78, 0x23, 0x8e, 0xbc, 0x00, 0x1c, 0x79, 0x09, 0xd4, 0xdd, 0xf3, 0xbf, 0x63, 0xc7,
	0x48, 0x1c, 0xe0, 0x36, 0xf5, 0x75, 0x75, 0x55, 0x75, 0xd5, 0x57, 0xdd, 0x35, 0xb0, 0x25, 0x64,
	0x94, 0x20, 0x8b, 0x93, 0x48, 0x46, 0x74, 0x08, 0xdb, 0xc7, 0xcb, 0x58, 0xae, 0x5c, 0x7c, 0x7b,
	0x81, 0x42, 0xd2, 0x5f, 0xdb, 0x70, 0xe7, 0x19, 0xca, 0xb9, 0xbf, 0xc4, 0x19, 0x26, 0x3e, 0x0a,
	0x17, 0x45, 0x1c, 0x85, 0x02, 0xc9, 0x09, 0x80, 0xf4, 0x97, 0x28, 0x34, 0x6a, 0xb7, 0x0f, 0xba,
	0x87, 0x5b, 0x93, 0x4f, 0x58, 0xa3, 0x2e, 0x9b, 0xe7, 0x8a, 0xc7, 0xa1, 0x4c, 0x56, 0x6e, 0x69,
	0xa7, 0xf3, 0x18, 0x46, 0xb5, 0x65, 0x32, 0x86, 0xee, 0x4f, 0xb8, 0xb2, 0xdb, 0x07, 0xed, 0x43,
	0xcb, 0x55, 0x9f, 0x64, 0x0f, 0x7a, 0x97, 0x3c, 0xb8, 0x40, 0xbb, 0x73, 0xd0, 0x3e, 0xec, 0xb9,
	0x46, 0x78, 0xd4, 0x39, 0x6a, 0xd3, 0x87, 0x3a, 0xbe, 0xe3, 0x4b, 0x0c, 0xe5, 0x4c, 0x72, 0x79,
	0x21, 0xd2, 0xc8, 0x89, 0x03, 0x03, 0x54, 0xe8, 0x9c, 0x9f, 0xa5, 0x96, 0x72, 0x99, 0x9e, 0xc0,
	0x38, 0xdb, 0xf4, 0x64, 0x35, 0xe7, 0x67, 0x2e, 0xbe, 0xbd, 0x49, 0x9f, 0xdc, 0x85, 0xbe, 0xd0,
	0xc6, 0x53, 0xff, 0xa9, 0x44, 0x1f, 0xc0, 0x6e, 0xcd, 0x8e, 0x88, 0x89, 0x0d, 0x9b, 0xbe, 0x38,
	0xbe, 0xf2, 0x85, 0xd4, 0x76, 0x06, 0x6e, 0x26, 0xd2, 0x23, 0xd8, 0xfe, 0x26, 0x89, 0x62, 0xad,
	0xaf, 0x5c, 0x8e, 0xa1, 0x2b, 0x73, 0x6f, 0xea, 0xf3, 0x06, 0x47, 0x3b, 0xa5, 0x9d, 0x22, 0x26,
	0xfb, 0x60, 0xf9, 0x42, 0x41, 0x31, 0x7a, 0xa9, 0x9b, 0x02, 0xa0, 0x9f, 0xc2, 0x28, 0x8b, 0x2b,
	0x4b, 0x47, 0x61, 0xb9, 0x5d, 0xb1, 0xfc, 0x55, 0xf9, 0x08, 0xaf, 0x04, 0x26, 0x2a, 0xb0, 0x6b,
	0x94, 0x09, 0x81, 0x8d, 0x0b, 0x81, 0x89, 0x0e, 0xce, 0x72, 0xf5, 0x37, 0xfd, 0x16, 0xee, 0xcc,
	0xfe, 0x69, 0x01, 0xae, 0x3d, 0xe7, 0x7d, 0x18, 0x97, 0x2c, 0xcd, 0x14, 0x31, 0xaf, 0x8d, 0xfc,
	0xaf, 0x0e, 0x8c, 0xa6, 0x9e, 0x57, 0x39, 0x25, 0x81, 0x8d, 0x90, 0x2f, 0x31, 0xf5, 0xa7, 0xbf,
	0xb3, 0x2c, 0x77, 0x8a, 0x2c, 0xef, 0x83, 0xf5, 0x26, 0x89, 0x42, 0x89, 0xa1, 0x27, 0xec, 0xae,
	0xc6, 0x0b, 0x40, 0xad, 0xe2, 0x15, 0x26, 0x0b, 0x5f, 0xa0, 0xb0, 0x37, 0xcc, 0x6a, 0x0e, 0xa8,
	0x55, 0x7e, 0xc9, 0xfd, 0x80, 0xbf, 0x0e, 0xd0, 0xee, 0xe9, 0x80, 0x0a, 0x40, 0x9d, 0x79, 0xc1,
	0x63, 0xbe, 0xf0, 0xe5, 0xca, 0xee, 0xeb, 0xc5, 0x5c, 0x56, 0x3b, 0x85, 0xe4, 0x89, 0xee, 0x0f,
	0x7b, 0xd3, 0xd8, 0xcd, 0x01, 0xc2, 0x80, 0xe0, 0x55, 0x8c, 0x0b, 0x89, 0xde, 0x89, 0x1f, 0xfa,
	0xe2, 0x5c, 0xab, 0x0d, 0xb4, 0x5a, 0xc3, 0x0a, 0xf9, 0x08, 0xe0, 0x8d, 0x96, 0xd0, 0x9b, 0x4a,
	0xdb, 0xd2, 0x7a, 0x25, 0xa4, 0x94, 0x35, 0xa8, 0x94, 0x70, 0x1f, 0xac, 0x45, 0x82, 0x5c, 0xa2,
	0xf7, 0x64, 0x65, 0x6f, 0x99, 0x28, 0x72, 0x40, 0x71, 0x37, 0x0a, 0x83, 0xd5, 0x0f, 0x2f, 0x9e,
	0xdb, 0xdb, 0x86, 0xbb, 0xa9, 0x48, 0x7f, 0x6e, 0xc3, 0x70, 0xea, 0x79, 0x73, 0xe4, 0xcb, 0x2c,
	0xd9, 0x43, 0xe8, 0xf8, 0x5e, 0x9a, 0xea, 0x8e, 0xef, 0x91, 0x7b, 0x60, 0xe9, 0x02, 0xff, 0x58,
	0xa4, 0xbb, 0xa8, 0xf8, 0x1e, 0xf4, 0x70, 0xc9, 0xfd, 0x20, 0xcd, 0xb7, 0x11, 0xf2, 0x7a, 0x6d,
	0x94, 0xea, 0xe5, 0xc0, 0x20, 0xe6, 0x42, 0xbc, 0x8b, 0x12, 0x4f, 0x27, 0xd8, 0x72, 0x73, 0x99,
	0x3e, 0x87, 0xe1, 0x69, 0x28, 0x30, 0x91, 0xf9, 0x35, 0x64, 0xc3, 0xe6, 0xf7, 0x28, 0x04, 0x3f,
	0xcb, 0x8a, 0x9e, 0x89, 0x84, 0xc2, 0x36, 0x26, 0x49, 0x94, 0x64, 0xcb, 0x26, 0xa2, 0x0a, 0x46,
	0x7f, 0xeb, 0x16, 0x37, 0x41, 0x6e, 0xf2, 0x0b, 0xe8, 0xeb, 0xb0, 0xb3, 0x5b, 0xcd, 0x66, 0x75,
	0x15, 0xa6, 0x25, 0xe1, 0xa6, 0x7a, 0xb7, 0x71, 0xe5, 0xfc, 0xd1, 0x81, 0xbe, 0xd9, 0xf6, 0xbf,
	0x60, 0xa9, 0xa6, 0x55, 0x99, 0xa5, 0x9a, 0x55, 0xff, 0x75, 0x96, 0x4e, 0x60, 0x2f, 0xab, 0x95,
	0x62, 0xea, 0xad, 0x1e, 0x83, 0xdf, 0x3b, 0xc5, 0x13, 0x92, 0x6e, 0x4a, 0x89, 0x30, 0x81, 0x9e,
	0x54, 0x40, 0xca, 0x83, 0x7d, 0xd6, 0xa8, 0xc6, 0x8c, 0x64, 0x54, 0x6f, 0x45, 0x85, 0x3f, 0xdb,
	0xd0, 0xd3, 0x9b, 0xd6, 0x5a, 0x28, 0xef, 0x92, 0x4e, 0x53, 0x97, 0x74, 0x4b, 0x7c, 0xa1, 0xb0,
	0x7d, 0xce, 0xc5, 0xf9, 0x8b, 0xac, 0x53, 0x0c, 0x05, 0x2a, 0x58, 0x29, 0x8b, 0x53, 0x99, 0xb6,
	0x52, 0x01, 0xa8, 0xda, 0x04, 0x5c, 0xc8, 0xe9, 0x62, 0x81, 0x42, 0x68, 0x1e, 0x58, 0x6e, 0x09,
	0x21, 0xf7, 0x61, 0x2c, 0xa2, 0xe0, 0x12, 0xbd, 0xa7, 0xe7, 0x3c, 0x08, 0x30, 0x3c, 0x43, 0x91,
	0x12, 0x62, 0x0d, 0x57, 0x11, 0x0a, 0x89, 0xb1, 0x66, 0x42, 0xcf, 0xd5, 0xdf, 0xd4, 0x03, 0xf2,
	0x2a, 0xf6, 0xb8, 0xc4, 0xfa, 0x3b, 0x14, 0x05, 0x5e, 0x51, 0x87, 0x54, 0x52, 0x78, 0x88, 0xef,
	0xe6, 0x79, 0x0b, 0xa4, 0x52, 0x8d, 0x41, 0xdd, 0x3a, 0x83, 0x68, 0x08, 0x07, 0xc6, 0x8b, 0x4a,
	0xe8, 0xac, 0x1a, 0x57, 0xc9, 0xa7, 0x2a, 0xce, 0x69, 0x96, 0xe9, 0x54, 0x6a, 0xe8, 0xb9, 0x03,
	0xd8, 0x5a, 0x44, 0xcb, 0x38, 0x40, 0x59, 0x72, 0x57, 0x86, 0xe8, 0x4b, 0xb8, 0x57, 0xf8, 0xfb,
	0x2e, 0xcf, 0xd6, 0xfb, 0x5c, 0x39, 0x30, 0xe0, 0x5a, 0x71, 0x2a, 0xb3, 0xab, 0x31, 0x93, 0xd5,
	0xa5, 0x66, 0x4c, 0xfe, 0x3b, 0x97, 0xda, 0xe4, 0x97, 0x3e, 0xf4, 0xcc, 0xd3, 0xf9, 0x39, 0x0c,
	0xb2, 0x17, 0x92, 0x8c, 0x59, 0xed, 0xb1, 0x74, 0x46, 0xac, 0x7a, 0x97, 0xd2, 0x16, 0x79, 0x00,
	0x9b, 0xe9, 0x25, 0x4f, 0x46, 0xac, 0x7a, 0xdd, 0x37, 0xa9, 0x4f, 0xc0, 0xca, 0x5a, 0x42, 0x90,
	0x31, 0xab, 0xcd, 0x1c, 0xce, 0xee, 0xda, 0xc5, 0x49, 0x5b, 0xe4, 0x4b, 0x18, 0x56, 0x07, 0x0e,
	0x42, 0xd8, 0xda, 0x04, 0xd2, 0xbc, 0xf5, 0x6b, 0xd8, 0xa9, 0x74, 0x20, 0xb9, 0xc3, 0x9a, 0xba,
	0xdd, 0xb9, 0xdb, 0xdc, 0xa8, 0xb4, 0x45, 0x1e, 0x17, 0xce, 0xcd, 0x88, 0x41, 0x0a, 0xdd, 0xca,
	0xf4, 0xe2, 0xec, 0xb2, 0xfa, 0x20, 0x42, 0x5b, 0xe4, 0x08, 0x76, 0x4e, 0x85, 0xc6, 0xf5, 0x40,
	0x27, 0xc8, 0x2e, 0xab, 0xcf, 0x91, 0x0e, 0x61, 0x6b, 0x23, 0xa1, 0xd9, 0x59, 0x19, 0x8d, 0xc9,
	0x0e, 0x2b, 0xcf, 0xd9, 0x26, 0xe4, 0xf5, 0xc9, 0x99, 0xb6, 0xc8, 0x67, 0x60, 0xe5, 0xa3, 0x1f,
	0xd9, 0x61, 0xe5, 0x01, 0xd2, 0x19, 0xb2, 0xca, 0x54, 0x68, 0x0e, 0x38, 0xab, 0x1f, 0x70, 0x76,
	0xfb, 0x03, 0x3e, 0x82, 0xb1, 0xa1, 0xe2, 0xd3, 0x20, 0x12, 0xa6, 0x71, 0xc9, 0x07, 0x6c, 0xbd,
	0x8d, 0x9d, 0x11, 0xab, 0x52, 0x96, 0xb6, 0xc8, 0x4b, 0xf8, 0xf0, 0xda, 0x4e, 0x24, 0x1f, 0xb3,
	0xf7, 0x75, 0x69, 0x93, 0xc9, 0x67, 0xb0, 0xd7, 0xd4, 0x6c, 0x64, 0x9f, 0xdd, 0xd0, 0x83, 0x0d,
	0x86, 0x5e, 0xf7, 0xf5, 0xdf, 0xcd, 0xc3, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x31, 0xdb,
	0xcb, 0xec, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoreClient is the client API for Store service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoreClient interface {
	//Insert
	AddEvent(ctx context.Context, in *AddEventRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	AddTeam(ctx context.Context, in *AddTeamRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	//Select
	GetEvents(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*GetEventResponse, error)
	GetEventByUser(ctx context.Context, in *GetEventByUserReq, opts ...grpc.CallOption) (*GetEventResponse, error)
	GetEventTeams(ctx context.Context, in *GetEventTeamsRequest, opts ...grpc.CallOption) (*GetEventTeamsResponse, error)
	GetEventStatus(ctx context.Context, in *GetEventStatusRequest, opts ...grpc.CallOption) (*EventStatusStore, error)
	IsEventExists(ctx context.Context, in *GetEventByTagReq, opts ...grpc.CallOption) (*GetEventByTagResp, error)
	GetTimeSeries(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetTimeSeriesResponse, error)
	DropEvent(ctx context.Context, in *DropEventReq, opts ...grpc.CallOption) (*DropEventResp, error)
	SetEventStatus(ctx context.Context, in *SetEventStatusRequest, opts ...grpc.CallOption) (*EventStatusStore, error)
	//Update
	UpdateCloseEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	UpdateTeamSolvedChallenge(ctx context.Context, in *UpdateTeamSolvedChallengeRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	UpdateTeamLastAccess(ctx context.Context, in *UpdateTeamLastAccessRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) AddEvent(ctx context.Context, in *AddEventRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := c.cc.Invoke(ctx, "/Store/AddEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) AddTeam(ctx context.Context, in *AddTeamRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := c.cc.Invoke(ctx, "/Store/AddTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetEvents(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/Store/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetEventByUser(ctx context.Context, in *GetEventByUserReq, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/Store/GetEventByUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetEventTeams(ctx context.Context, in *GetEventTeamsRequest, opts ...grpc.CallOption) (*GetEventTeamsResponse, error) {
	out := new(GetEventTeamsResponse)
	err := c.cc.Invoke(ctx, "/Store/GetEventTeams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetEventStatus(ctx context.Context, in *GetEventStatusRequest, opts ...grpc.CallOption) (*EventStatusStore, error) {
	out := new(EventStatusStore)
	err := c.cc.Invoke(ctx, "/Store/GetEventStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) IsEventExists(ctx context.Context, in *GetEventByTagReq, opts ...grpc.CallOption) (*GetEventByTagResp, error) {
	out := new(GetEventByTagResp)
	err := c.cc.Invoke(ctx, "/Store/IsEventExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetTimeSeries(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GetTimeSeriesResponse, error) {
	out := new(GetTimeSeriesResponse)
	err := c.cc.Invoke(ctx, "/Store/GetTimeSeries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) DropEvent(ctx context.Context, in *DropEventReq, opts ...grpc.CallOption) (*DropEventResp, error) {
	out := new(DropEventResp)
	err := c.cc.Invoke(ctx, "/Store/DropEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) SetEventStatus(ctx context.Context, in *SetEventStatusRequest, opts ...grpc.CallOption) (*EventStatusStore, error) {
	out := new(EventStatusStore)
	err := c.cc.Invoke(ctx, "/Store/SetEventStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) UpdateCloseEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/Store/UpdateCloseEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) UpdateTeamSolvedChallenge(ctx context.Context, in *UpdateTeamSolvedChallengeRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/Store/UpdateTeamSolvedChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) UpdateTeamLastAccess(ctx context.Context, in *UpdateTeamLastAccessRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/Store/UpdateTeamLastAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoreServer is the server API for Store service.
type StoreServer interface {
	//Insert
	AddEvent(context.Context, *AddEventRequest) (*InsertResponse, error)
	AddTeam(context.Context, *AddTeamRequest) (*InsertResponse, error)
	//Select
	GetEvents(context.Context, *GetEventRequest) (*GetEventResponse, error)
	GetEventByUser(context.Context, *GetEventByUserReq) (*GetEventResponse, error)
	GetEventTeams(context.Context, *GetEventTeamsRequest) (*GetEventTeamsResponse, error)
	GetEventStatus(context.Context, *GetEventStatusRequest) (*EventStatusStore, error)
	IsEventExists(context.Context, *GetEventByTagReq) (*GetEventByTagResp, error)
	GetTimeSeries(context.Context, *EmptyRequest) (*GetTimeSeriesResponse, error)
	DropEvent(context.Context, *DropEventReq) (*DropEventResp, error)
	SetEventStatus(context.Context, *SetEventStatusRequest) (*EventStatusStore, error)
	//Update
	UpdateCloseEvent(context.Context, *UpdateEventRequest) (*UpdateResponse, error)
	UpdateTeamSolvedChallenge(context.Context, *UpdateTeamSolvedChallengeRequest) (*UpdateResponse, error)
	UpdateTeamLastAccess(context.Context, *UpdateTeamLastAccessRequest) (*UpdateResponse, error)
}

// UnimplementedStoreServer can be embedded to have forward compatible implementations.
type UnimplementedStoreServer struct {
}

func (*UnimplementedStoreServer) AddEvent(ctx context.Context, req *AddEventRequest) (*InsertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvent not implemented")
}
func (*UnimplementedStoreServer) AddTeam(ctx context.Context, req *AddTeamRequest) (*InsertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTeam not implemented")
}
func (*UnimplementedStoreServer) GetEvents(ctx context.Context, req *GetEventRequest) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}
func (*UnimplementedStoreServer) GetEventByUser(ctx context.Context, req *GetEventByUserReq) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventByUser not implemented")
}
func (*UnimplementedStoreServer) GetEventTeams(ctx context.Context, req *GetEventTeamsRequest) (*GetEventTeamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventTeams not implemented")
}
func (*UnimplementedStoreServer) GetEventStatus(ctx context.Context, req *GetEventStatusRequest) (*EventStatusStore, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventStatus not implemented")
}
func (*UnimplementedStoreServer) IsEventExists(ctx context.Context, req *GetEventByTagReq) (*GetEventByTagResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsEventExists not implemented")
}
func (*UnimplementedStoreServer) GetTimeSeries(ctx context.Context, req *EmptyRequest) (*GetTimeSeriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeSeries not implemented")
}
func (*UnimplementedStoreServer) DropEvent(ctx context.Context, req *DropEventReq) (*DropEventResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropEvent not implemented")
}
func (*UnimplementedStoreServer) SetEventStatus(ctx context.Context, req *SetEventStatusRequest) (*EventStatusStore, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEventStatus not implemented")
}
func (*UnimplementedStoreServer) UpdateCloseEvent(ctx context.Context, req *UpdateEventRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCloseEvent not implemented")
}
func (*UnimplementedStoreServer) UpdateTeamSolvedChallenge(ctx context.Context, req *UpdateTeamSolvedChallengeRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTeamSolvedChallenge not implemented")
}
func (*UnimplementedStoreServer) UpdateTeamLastAccess(ctx context.Context, req *UpdateTeamLastAccessRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTeamLastAccess not implemented")
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_AddEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).AddEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/AddEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).AddEvent(ctx, req.(*AddEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_AddTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).AddTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/AddTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).AddTeam(ctx, req.(*AddTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetEvents(ctx, req.(*GetEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetEventByUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventByUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetEventByUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/GetEventByUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetEventByUser(ctx, req.(*GetEventByUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetEventTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventTeamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetEventTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/GetEventTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetEventTeams(ctx, req.(*GetEventTeamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetEventStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetEventStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/GetEventStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetEventStatus(ctx, req.(*GetEventStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_IsEventExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventByTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).IsEventExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/IsEventExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).IsEventExists(ctx, req.(*GetEventByTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetTimeSeries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetTimeSeries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/GetTimeSeries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetTimeSeries(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_DropEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).DropEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/DropEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).DropEvent(ctx, req.(*DropEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_SetEventStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetEventStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).SetEventStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/SetEventStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).SetEventStatus(ctx, req.(*SetEventStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_UpdateCloseEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).UpdateCloseEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/UpdateCloseEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).UpdateCloseEvent(ctx, req.(*UpdateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_UpdateTeamSolvedChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTeamSolvedChallengeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).UpdateTeamSolvedChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/UpdateTeamSolvedChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).UpdateTeamSolvedChallenge(ctx, req.(*UpdateTeamSolvedChallengeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_UpdateTeamLastAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTeamLastAccessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).UpdateTeamLastAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Store/UpdateTeamLastAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).UpdateTeamLastAccess(ctx, req.(*UpdateTeamLastAccessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEvent",
			Handler:    _Store_AddEvent_Handler,
		},
		{
			MethodName: "AddTeam",
			Handler:    _Store_AddTeam_Handler,
		},
		{
			MethodName: "GetEvents",
			Handler:    _Store_GetEvents_Handler,
		},
		{
			MethodName: "GetEventByUser",
			Handler:    _Store_GetEventByUser_Handler,
		},
		{
			MethodName: "GetEventTeams",
			Handler:    _Store_GetEventTeams_Handler,
		},
		{
			MethodName: "GetEventStatus",
			Handler:    _Store_GetEventStatus_Handler,
		},
		{
			MethodName: "IsEventExists",
			Handler:    _Store_IsEventExists_Handler,
		},
		{
			MethodName: "GetTimeSeries",
			Handler:    _Store_GetTimeSeries_Handler,
		},
		{
			MethodName: "DropEvent",
			Handler:    _Store_DropEvent_Handler,
		},
		{
			MethodName: "SetEventStatus",
			Handler:    _Store_SetEventStatus_Handler,
		},
		{
			MethodName: "UpdateCloseEvent",
			Handler:    _Store_UpdateCloseEvent_Handler,
		},
		{
			MethodName: "UpdateTeamSolvedChallenge",
			Handler:    _Store_UpdateTeamSolvedChallenge_Handler,
		},
		{
			MethodName: "UpdateTeamLastAccess",
			Handler:    _Store_UpdateTeamLastAccess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "store.proto",
}
